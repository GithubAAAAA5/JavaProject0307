
public class Network {
/*
 * -IP주소(ipv4, ipv6)/다른네트워크 

0.0.0.0
자신의 ip를 알지 못할때 사용하거나  or 모든 주소를 의미함

255.255.255.255
IP 주소 255.255.255.255는 브로드캐스트 주소로 알려져 있습니다. 
이 주소는 로컬 네트워크에서 모든 호스트에게 메시지를 전달하기 위해 사용됩니다.
이 주소를 통해 보낸 패킷은 네트워크 상의 모든 호스트에게 도달하므로, 
해당 주소로 보내는 데이터는 네트워크의 모든 호스트에게 동시에 전달됩니다.
일반적으로 이 주소는 로컬 네트워크에서 서비스를 발견하거나, 
DHCP 서버에 IP 주소를 요청하는 데 사용됩니다. 
또한 특정 서비스나 리소스를 찾기 위해 네트워크 상의 모든 호스트에게 
쿼리를 보내는 경우에도 사용될 수 있습니다.

브로드캐스트 주소는 보통 지정된 네트워크의 모든 호스트에게 동시에 메시지를 전송하기 위해 사용되며, 
일반적으로 보안상의 이유로 외부 네트워크에서는 라우팅되지 않습니다.
공인 IP - 인터넷 통신을 할때 사용하는 고유 주소
공인 IP(Public IP) 주소는 인터넷 업체가 사용자에게 할당하며 
공유기가 인터넷과 통신하도록 하는 역할을 하는 외부 IP 주소입니다. 
공인 IP 주소는 사용자의 전체 네트워크에 적용되기에 
동일한 인터넷 연결을 사용하는 장치는 IP 주소를 공유하게 됩니다. 
이렇게 네트워크가 공동으로 사용하는 IP 주소라는 점에서 공용 IP 주소라고 부르기도 합니다.
인터넷 업체는 공인 IP 주소의 사용자가 누구인지 파악할 수 있기에 
공인 IP 주소를 사용하는 경우 인터넷 활동이 추적되고 모니터링될 수 있습니다. 
또한 제삼자의 외부 IP 확인으로 인해 데이터와 인터넷 활동이 노출될 가능성도 높습니다.

사설 IP - 내부적 통신으로 사용할 용도로 빼둔 주소
사설 IP(Private IP) 주소는 공유기가 노트북, 스마트 TV, 휴대폰 등 
홈 네트워크에 연결된 장치에 할당한 내부 IP 주소를 의미합니다. 
사설 IP 주소는 로컬 네트워크에서 할당되며 다른 네트워크의 IP 주소와 중복될 수 있습니다. 
사설 IP 주소는 각자의 내부 네트워크에서 사용되기에 
다른 네트워크의 IP 주소와 중복되더라도 문제가 없기 때문입니다. 
대신 동일한 로컬 네트워크에 연결된 장치에는 같은 사설 IP 주소를 할당할 수 없습니다.
사설 IP 주소는 IANA가 확보한 사설 IP 주소 범위 내에서 할당되며 인터넷에 노출되지 않습니다. 
전 세계에는 수백만 개의 사설 네트워크가 존재하며 사설 네트워크에 연결된 장치에는 다음 사설 IP 대역 내의 IP 주소가 할당됩니다.

동적 IP 주소	(홈네트워크, 사무실인터넷)
동적 IP 주소는 시간이 지남에 따라 변화하는 IP 주소를 의미하며 유동 IP 주소라고도 합니다. 
동적 IP 주소는 인터넷 업체가 할당하며 장치를 재부팅하거나, 새로운 장치를 네트워크에 추가하거나, 
네트워크 설정을 수정할 때마다 변경되는 IP 주소입니다. 
하지만 IP 주소가 변경된다고 인터넷 연결에 문제가 생기는 것은 아니며, 
대부분의 가정에서는 동적 IP 주소를 사용하고 있습니다.

정적 IP 주소	 (웹호스팅, 이메일서버, FTP, VolP)
정적 IP 주소는 동적 IP 주소와 달리 변화하지 않는 IP 주소를 의미하며 고정 IP 주소라고도 합니다. 
보통 정적 IP 주소는 웹사이트를 호스팅하거나 이메일 및 FTP 서비스를 제공하는 서버에서 할당하며, 
안정적인 인터넷 연결과 웹 주소의 일관성을 유지해야 하는 공공 기관에서 사용되기도 합니다.
게임이나 VoIP 연결을 위해 개인이 정적 IP 주소를 사용하는 경우도 있지만 
정적 IP 주소의 단점 때문에 보통 가정에서는 사용되지 않습니다. 
정적 IP 주소의 단점은 다음과 같습니다.
정적 IP 주소를 할당받으려면 인터넷 업체에 추가 요금을 지불해야 합니다.
무작위 대입 공격에 취약하기 때문에 추가 보안 조치가 필요합니다.
데이터 마이닝 업체가 IP 주소를 추적할 가능성이 있습니다.

IPv4 (Internet Protocol version 4):
IPv4는 현재 가장 널리 사용되는 IP 주소 체계입니다.
 IPv4 주소는 32비트 길이로, 보통 네 개의 8비트 숫자로 표현됩니다.  
 각 숫자는 0부터 255까지의 값을 가질 수 있습니다. (예: 192.0.2.1)
 그러나 IPv4 주소의 고유한 한계로, 총 42억 9천만 개의 주소만 가능합니다. 
 이는 인터넷의 성장과 기기들의 증가로 곧 부족해질 것으로 예상되었습니다.

IPv6 (Internet Protocol version 6):
IPv6는 IPv4의 주소 고갈 문제를 해결하기 위해 개발되었습니다.
 IPv6 주소는 128비트 길이로, 일반적으로 8개의 16비트 숫자로 표현됩니다. 
 (예: 2001:0db8:85a3:0000:0000:8a2e:0370:7334)
 이론적으로 IPv6는 약 340 언등의 주소를 제공하며, 
 이는 현실적으로 무한히 많은 네트워크와 기기를 지원할 수 있습니다.
 

다른 네트워크
 - LAN (Local Area Network):
  LAN은 작은 지리적 영역 내에서 컴퓨터 및 기타 네트워크 장치들을 연결하는 네트워크입니다. 
 일반적으로 가정이나 사무실 내에서 사용됩니다.

 - WAN (Wide Area Network):
  WAN은 넓은 지리적 영역을 커버하는 네트워크로, LAN들을 연결하여 멀리 떨어진 장치들 간의 
 통신을 가능하게 합니다. 인터넷 역시 하나의 대규모 WAN입니다.

 - VPN (Virtual Private Network):
 VPN은 공중 네트워크(예: 인터넷)를 통해 안전하게 통신하기 위해 사용되는 기술입니다. 
 보안 및 개인 정보 보호를 위해 널리 사용됩니다.

 -Intranet:
 Intranet은 기업이나 조직 내에서 사용되는 전용 네트워크로, 내부 자원 공유 및 통신을 위해 설계되었습니다.

 -Extranet:
 Extranet은 조직과 외부 파트너, 고객 등이 안전하게 데이터를 공유할 수 있도록 하는 확장된 인트라넷입니다.
===========================================================================
네트워크 주소와 호스트의 관계

네트워크란 : 통신망
두 개 이상의 컴퓨터나 기타 장치가 데이터를 교환할 수 있도록 연결된 상호 연결된 구조를 가리킵니다. 
이러한 장치들은 데이터를 주고받기 위해 통신 매체를 통해 연결되어 있습니다. 
네트워크는 데이터를 공유하고 통신하기 위한 기반을 제공하며, 현대의 디지털 세계에서 핵심적인 역할을 합니다.

호스트 : 통신장비 / 노드

네트워크 주소(Network Address):
네트워크 주소는 주어진 IP 주소에서 네트워크 세그먼트를 식별하는 데 사용됩니다.
네트워크 주소는 해당 네트워크의 모든 장치에 공통으로 적용됩니다. 
이 주소는 네트워크의 시작 주소를 나타냅니다.
예를 들어, IP 주소 192.168.1.0/24에서 192.168.1.0은 네트워크 주소입니다.

호스트 주소(Host Address):
호스트 주소는 주어진 네트워크 내의 특정 장치를 식별하는 데 사용됩니다.
호스트 주소는 네트워크의 각 장치에 고유합니다. 이 주소는 해당 장치를 나타냅니다.
예를 들어, IP 주소 192.168.1.10에서 10이 호스트 주소이며, 
이 주소는 네트워크 192.168.1.0에서 특정 장치를 식별합니다.

네트워크 주소는 네트워크를 식별하고, 호스트 주소는 해당 네트워크 내의 특정 장치를 식별합니다.


 서브넷 마스크, 프리픽스

IP 주소: 192.168.1.10
서브넷 마스크: 255.255.255.0
프리픽스: /24

서브넷 마스크(Subnet Mask):
서브넷 마스크는 IP 주소의 서브넷을 나타내는 데 사용됩니다. 
이는 IP 주소의 어떤 부분이 네트워크 주소인지, 어떤 부분이 호스트 주소인지를 결정합니다.
서브넷 마스크는 32비트의 이진 숫자로 표현됩니다. 
일반적으로 이진 형태로 표현되지 않고, 점으로 구분된 10진수로 표현됩니다. (예: 255.255.255.0)
이진 형태에서 서브넷 마스크의 1로 설정된 비트는 네트워크 부분을 나타내고, 
0으로 설정된 비트는 호스트 부분을 나타냅니다.
서브넷 마스크에서 255.255.255.0은 이진으로 변환하면 "11111111.11111111.11111111.00000000"이 됩니다.


프리픽스(Prefix):

프리픽스(Prefix)는 IP 주소의 서브넷 마스크를 간단하게 나타내는 방법입니다. 
이것은 /n 형식으로 표현되며, 여기서 n은 해당 네트워크의 네트워크 부분에 할당되는 비트 수를 나타냅니다. 
이 비트 수는 네트워크의 크기를 결정하고, 이 비트 수가 커지면 호스트 부분의 크기는 줄어듭니다.
프리픽스의 값은 일반적으로 1에서 32 사이의 값을 가질 수 있습니다. 
이 값은 서브넷 마스크에서 1로 설정된 비트의 개수를 나타냅니다.
예를 들어:
/24 프리픽스는 서브넷 마스크의 24비트가 1로 설정된 것을 의미합니다. 
이는 일반적으로 IPv4에서 사용되며, 서브넷 마스크가 255.255.255.0임을 의미합니다.
/16 프리픽스는 서브넷 마스크의 16비트가 1로 설정된 것을 의미합니다. 
이는 일반적으로 IPv4에서 대규모 네트워크를 구성할 때 사용되며, 서브넷 마스크가 255.255.0.0임을 의미합니다.
/8 프리픽스는 서브넷 마스크의 8비트가 1로 설정된 것을 의미합니다. 
이는 일반적으로 대규모의 슈퍼넷을 나타내며, 서브넷 마스크가 255.0.0.0임을 의미합니다.


 클래스(A, B, C, D, E)

클래스 A: 대규모 국가 단위의 네트워크망 에 할당	255.000.000.000
첫 번째 비트가 0으로 시작합니다.			사설ip 주소 10.0.0.0~10.255.255.255
첫 번째 옥텟이 0에서 127까지인 주소 범위
첫 번째 옥텟(8비트)은 네트워크 식별을 위해 사용되며, 나머지 24비트는 호스트 식별을 위해 사용됩니다.
예를 들어, 0.0.0.0부터 127.255.255.255까지의 IP 주소 범위가 클래스 A에 속합니다.

클래스 B: 중간조직 기업단위 에 할당			255.255.000.000
첫 번째 비트가 10으로 시작합니다.			사설ip 주소 172.16.0.0~172.31.255.255
첫 번째 옥텟이 128에서 191까지인 주소 범위
첫 번째 두 옥텟(16비트)은 네트워크 식별을 위해 사용되며, 나머지 16비트는 호스트 식별을 위해 사용됩니다.
예를 들어, 128.0.0.0부터 191.255.255.255까지의 IP 주소 범위가 클래스 B에 속합니다.

클래스 C:						255.255.255.000
첫 번째 비트가 110으로 시작합니다.			사설ip 주소 192.168.0.0~192.168.255.255
첫 번째 옥텟이 192에서 223까지인 주소 범위
첫 번째 세 옥텟(24비트)은 네트워크 식별을 위해 사용되며, 나머지 8비트는 호스트 식별을 위해 사용됩니다.
예를 들어, 192.0.0.0부터 223.255.255.255까지의 IP 주소 범위가 클래스 C에 속합니다.

클래스 D:						
첫 번째 비트가 1110으로 시작합니다.
클래스 D는 멀티캐스트 주소에 할당됩니다. 따라서 멀티캐스트 그룹에 참여하는 호스트를 식별하는 데 사용됩니다.
D클래스의 주소가 멀티캐스트의 고유주소입니다.
예를 들어, 224.0.0.0부터 239.255.255.255까지의 IP 주소 범위가 클래스 D에 속합니다.

클래스 E:
첫 번째 비트가 1111으로 시작합니다.
클래스 E는 실험용 목적으로 예약되어 있습니다. 실제 인터넷에서는 사용되지 않습니다.
예를 들어, 240.0.0.0부터 255.255.255.255까지의 IP 주소 범위가 클래스 E에 속합니다.

이러한 클래스 구분은 기존의 IP 주소 할당 체계에서 사용되었지만, 
현재는 클래스리스(Classless) 방식의 주소 할당(CIDR - Classless Inter-Domain Routing)이 
더 보편적으로 사용되고 있습니다. CIDR은 프리픽스를 사용하여 유연하게 IP 주소를 할당하고 
관리할 수 있도록 합니다.

=======================================================================

MAC 주소
네트워크 인터페이스 기기가 가지는 고유 주소;
MAC 주소(MAC address)는 네트워크 인터페이스 카드(Network Interface Card, NIC)나 
네트워크 장비(Network Device)에 할당된 고유한 식별자입니다. 
MAC 주소는 물리적으로 하드웨어에 부여되므로 네트워크 계층(OSI 모델에서 두 번째 계층)에서 사용됩니다.
MAC 주소는 48비트 길이로 구성되며, 일반적으로 16진수로 표현됩니다. 
MAC 주소는 네트워크 장비가 데이터를 주고받을 때 출발지와 목적지를 식별하는 데 사용됩니다.
예를 들어, 일반적인 MAC 주소의 형식은 다음과 같습니다: 00:1A:2B:3C:4D:5E.
MAC 주소는 고유하며 제조사 식별자(Organizationally Unique Identifier, OUI)와 
제조사가 할당한 고유 식별 번호를 포함합니다. 이것은 네트워크에서 장비를 식별하는 데 사용됩니다.
MAC 주소는 일반적으로 물리적인 네트워크 계층에서 사용되며, 
이더넷(Ethernet)과 같은 네트워크 프로토콜에서 중요한 역할을 합니다. 
데이터 링크 계층에서 프레임을 보낼 때, MAC 주소는 목적지 장치를 식별하여 데이터를 전달합니다. 
MAC 주소는 라우팅과 같은 네트워크 관리 작업에서도 사용됩니다.
또한, MAC 주소는 일반적으로 장치에 하드웨어적으로 프로그래밍되기 때문에, 
네트워크 카드를 교체하지 않는 이상 일반적으로 변경할 수 없습니다.


네트워크에서 여러 장치가 공유하는 물리적인 매체(예: 이더넷 케이블)에 대한 접근을 관리하는 방법을 말합니다. 
MAC은 네트워크 장비가 데이터를 송수신하는 방식을 조정하여 네트워크 충돌을 방지하고 
효율적인 통신을 가능케 합니다.
네트워크에서 MAC은 다음과 같은 방식으로 작동합니다:

CSMA/CD (Carrier Sense Multiple Access with Collision Detection):
이더넷과 같은 네트워크에서는 장비들이 데이터를 송신하기 전에 매체가 사용 가능한지를 감지합니다. 
이를 "캐리어 센스"라고 합니다.
만약 둘 이상의 장비가 동시에 데이터를 송신하려고 하면, 충돌이 발생합니다. 이를 "충돌 감지"라고 합니다.
충돌이 발생하면, 장비들은 일정 시간 동안 기다렸다가 다시 시도합니다.

CSMA/CA (Carrier Sense Multiple Access with Collision Avoidance):
CSMA/CA는 무선 네트워크에서 주로 사용됩니다.
데이터를 전송하기 전에 매체 사용 가능 여부를 확인하고, 충돌을 피하기 위해 전송 시간을 지연시킵니다.

이더넷 프레임 구조:
이더넷 프레임에는 출발지 MAC 주소와 목적지 MAC 주소가 포함됩니다. 
네트워크 장비는 이 MAC 주소를 기반으로 프레임을 보낼 대상을 결정합니다.
네트워크 스위치와 같은 장비는 프레임을 수신하고 해당 프레임을 
목적지 장비로 전달하기 위해 이 MAC 주소를 사용합니다.

MAC 주소 테이블:
스위치와 같은 네트워크 장비는 수신된 프레임의 출발지 MAC 주소를 기록하여 
해당 주소가 어느 포트에 연결되어 있는지를 추적합니다. 이 정보는 MAC 주소 테이블에 저장됩니다.
목적지 MAC 주소가 테이블에 없는 경우, 스위치는 모든 포트로 프레임을 전송합니다. 
그러나 목적지 주소가 테이블에 있는 경우 해당 포트로만 프레임을 전송합니다.

토큰 링 (Token Ring):
토큰 링은 네트워크에 연결된 장치들이 데이터를 전송하기 위해 토큰이라는 특별한 신호를 사용합니다.
토큰을 보유하고 있는 장치만 데이터를 전송할 수 있습니다.

이더넷 스위칭 (Ethernet Switching):
스위치는 이더넷 네트워크에서 MAC 주소를 사용하여 데이터를 전송합니다.
스위치는 데이터를 전송할 때 목적지 MAC 주소를 기반으로 포트로 데이터를 전송합니다. 
이렇게 함으로써 네트워크 트래픽을 최적화하고 충돌을 방지합니다.

=====================================================================

Port 주소
프로세스나 서비스를 구분하기 위한 주소
"포트 주소(port address)"는 네트워크 통신에서 프로세스나 서비스를 식별하는 데 사용되는 번호입니다. 
TCP/IP 프로토콜 스택에서 사용됩니다. TCP/IP는 인터넷에서 데이터를 전송하기 위한 
일련의 프로토콜을 나타내는 것으로, 이 프로토콜은 IP 주소와 포트 번호를 사용하여 통신합니다.
일반적으로 포트는 16비트의 숫자로 표현되며, 0부터 65535까지의 값을 가질 수 있습니다. 
포트 번호는 특정 프로세스나 서비스에 할당되며, 통신의 출발지와 목적지를 식별합니다.
포트 주소는 서버의 서비스나 프로세스를 식별하는 데 사용됩니다. 
예를 들어, 웹 서버가 HTTP 요청을 처리하기 위해 80번 포트를 사용하거나, 
메일 서버가 SMTP 서비스를 위해 25번 포트를 사용하는 것과 같이 
서비스는 특정 포트 번호에 바인딩되어 대기하고 있습니다. 
클라이언트가 서버에 연결할 때, 목적지 IP 주소와 해당 서비스에 해당하는 
포트 번호를 사용하여 연결을 요청합니다. 이를 통해 서버는 
어떤 서비스에 데이터를 전달할지 판단하고 해당 서비스로 라우팅합니다.

TCP (Transmission Control Protocol):
TCP는 연결 지향적인 프로토콜로, 신뢰성 있는 데이터 전송을 제공합니다. 
이는 데이터를 받을 준비가 된 호스트와 신뢰할 수 있는 연결을 설정하는 데 중요합니다.
각 TCP 연결에는 송신자와 수신자의 IP 주소 및 포트 번호가 포함됩니다.
예를 들어, 웹 서버는 보통 80번 포트를 사용합니다. 
클라이언트가 웹 서버에 HTTP 요청을 보낼 때, 요청은 목적지 IP 주소와 80번 포트로 전송됩니다.

UDP (User Datagram Protocol):
UDP는 비연결성 프로토콜로, 데이터 전송에 대한 신뢰성이 낮습니다. 
이는 속도와 간편함을 원하는 애플리케이션에 적합합니다.
각각의 데이터그램에는 송신자와 수신자의 IP 주소 및 포트 번호가 포함됩니다.
UDP는 실시간 스트리밍, DNS 쿼리 등 신속한 데이터 전송이 필요한 서비스에서 주로 사용됩니다.


-TCP/IP 모델

TCP/IP 모델은 네트워크 통신에서 사용되는 프로토콜을 계층적으로 구성한 모델입니다. 
이 모델은 네트워크 통신을 단계별로 나누어 각 계층이 특정한 기능을 담당하도록 설계되었습니다. 
TCP/IP 모델은 4개의 계층으로 구성되어 있습니다:

네트워크 접속 계층 (Network Access Layer 또는 Link Layer):
네트워크 접속 계층은 물리적인 네트워크와 상호작용하여 데이터를 전송하는 역할을 합니다.
하드웨어 주소 할당, 데이터의 비트 단위 전송, 물리적인 네트워크 연결 및 제어 등의 작업을 수행합니다.
주요 프로토콜: 이더넷( Ethernet), Wi-Fi, Bluetooth, ATM 등

인터넷 계층 (Internet Layer):
인터넷 계층은 IP 주소를 사용하여 패킷을 라우팅하고 목적지까지 전달하는 역할을 합니다.
네트워크 간 라우팅 및 패킷 전달을 담당합니다.
주요 프로토콜: IP(Internet Protocol), ICMP(Internet Control Message Protocol), ARP(Address Resolution Protocol)

전송 계층 (Transport Layer):
전송 계층은 종단간 통신을 제어하고 신뢰성 있는 데이터 전송을 보장합니다.
데이터의 분할 및 조립, 흐름 제어, 오류 복구 등을 수행합니다.
주요 프로토콜: TCP(Transmission Control Protocol), UDP(User Datagram Protocol)

응용 계층 (Application Layer):
응용 계층은 최종 사용자와 상호작용하는 응용 프로그램들을 포함합니다.
HTTP, FTP, SMTP, Telnet, DNS 등과 같은 다양한 프로토콜이 이 계층에서 작동합니다.
주요 프로토콜: HTTP(Hypertext Transfer Protocol), FTP(File Transfer Protocol), 
SMTP(Simple Mail Transfer Protocol), DNS(Domain Name System)
TCP/IP 모델은 OSI(Open Systems Interconnection) 모델과 유사하지만, 
계층의 이름과 수는 다릅니다. 또한, TCP/IP 모델은 네트워크 통신에 널리 사용되며, 실제 인터넷과 호환됩니다.

OSI 참조 모델(OSI 7 Layer) ** 통신 모델

OSI(Open Systems Interconnection) 참조 모델은 
네트워크 통신에서 사용되는 프로토콜을 계층적으로 구성한 모델입니다. 
이 모델은 국제표준화기구(ISO)에서 제정되었으며, 
네트워크 통신을 7개의 계층으로 나누어 관리합니다. 
OSI 모델은 네트워크 프로토콜과 통신 프로세스를 이해하고 설명하는 데 도움이 됩니다.
OSI 모델은 TCP/IP 모델과는 다르게 7개의 계층을 사용하여 네트워크 통신을 관리합니다. 
이 모델은 특정 기능을 각 계층으로 분리하여 네트워크를 보다 잘 이해하고 설계할 수 있도록 도와줍니다.
OSI 모델은 아래와 같은 7개의 계층으로 구성됩니다:

물리 계층 (Physical Layer):
물리 계층은 네트워크 장비 사이의 실제 연결과 데이터 전송을 담당합니다.
이 계층에서는 데이터 비트가 물리적인 매체(전선, 광섬유 등)를 통해 전송됩니다.
주요 장비: 허브(Hub), 리피터(Repeater), 케이블(Cable), 스위치(Switch)
주요 기술: 이더넷(Ethernet), Wi-Fi, DSL(Digital Subscriber Line), 광섬유(Fiber Optic)

데이터 링크 계층 (Data Link Layer):
데이터 링크 계층은 물리 계층을 통해 전송된 데이터의 오류를 감지하고 수정하며, 
네트워크 장비 간의 직접적인 통신을 관리합니다.
데이터 링크 계층은 프레임(Frame) 단위로 데이터를 전송하고, 
각 프레임에는 송신자와 수신자를 식별하는 MAC 주소가 포함됩니다.
주요 장비: 스위치(Switch), 브리지(Bridge)
주요 프로토콜: 이더넷(Ethernet), PPP(Point-to-Point Protocol), HDLC(High-Level Data Link Control)

네트워크 계층 (Network Layer):
네트워크 계층은 데이터를 목적지까지 전달하기 위한 최적의 경로를 결정하고 라우팅을 수행합니다.
IP 주소를 사용하여 데이터를 목적지로 전달하고, 서브넷을 관리합니다.
주요 장비: 라우터(Router), L3 스위치(Layer 3 Switch)
주요 프로토콜: IP(Internet Protocol), ICMP(Internet Control Message Protocol), ARP(Address Resolution Protocol)

전송 계층 (Transport Layer):
전송 계층은 종단 간 통신을 제어하고 신뢰성 있는 데이터 전송을 보장합니다.
데이터의 분할 및 조립, 흐름 제어, 오류 복구 등을 수행합니다.
주요 프로토콜: TCP(Transmission Control Protocol), UDP(User Datagram Protocol)

세션 계층 (Session Layer):
세션 계층은 통신 세션을 설정, 관리 및 종료하는 역할을 합니다.
데이터의 동기화 및 시스템 간의 동시 작업을 관리합니다.
주요 프로토콜: NetBIOS(Network Basic Input/Output System), RPC(Remote Procedure Call)

표현 계층 (Presentation Layer):
표현 계층은 데이터의 형식을 변환하고 암호화 및 압축을 수행합니다.
데이터의 구문 및 의미를 해석하여 응용 계층으로 전달합니다.
주요 프로토콜: SSL(Secure Sockets Layer), JPEG, ASCII

응용 계층 (Application Layer):
응용 계층은 최종 사용자와 상호작용하는 응용 프로그램을 포함합니다.
사용자 인터페이스, 파일 전송, 이메일, 웹 브라우징 등 다양한 서비스를 제공합니다.
주요 프로토콜: HTTP(Hypertext Transfer Protocol), FTP(File Transfer Protocol), 
                   SMTP(Simple Mail Transfer Protocol), DNS(Domain Name System)

============================================================================

-통신 방식 (TCP통신, UDP통신)

TCP (Transmission Control Protocol):
TCP는 연결 지향적인 프로토콜로, 신뢰성 있는 데이터 전송을 보장합니다.
데이터의 분할 및 조립, 흐름 제어, 오류 복구 등의 기능을 제공하여 신뢰성 있는 통신을 지원합니다.
전송되는 데이터는 목적지에 순서대로 도착하며, 만약 데이터가 손실되거나 손상되면 재전송됩니다.
예를 들어, 웹 페이지의 요청과 응답, 이메일의 전송 등과 같이 신뢰성이 중요한 데이터 전송에 사용됩니다.
TCP 통신은 3-way handshake를 통해 연결을 설정하고, 연결이 끝나면 연결을 해제하는 과정을 거칩니다.

UDP (User Datagram Protocol):
UDP는 비연결성 프로토콜로, 신뢰성이 낮지만 빠른 데이터 전송을 지원합니다.
전송되는 데이터에 대한 신뢰성이 보장되지 않으며, 데이터의 순서 역시 보장되지 않습니다.
데이터그램 단위로 데이터를 전송하며, 흐름 제어나 오류 복구 등의 기능이 없어 TCP보다 경량화되어 있습니다.
스트리밍 서비스, 동영상 스트리밍, DNS 쿼리 등과 같이 데이터의 빠른 전송이 중요한 경우에 사용됩니다.
UDP는 연결 설정 과정이 없으며, 데이터를 전송하고 수신자가 데이터를 받는 과정만을 수행합니다.

두 프로토콜은 각각의 특성에 따라 다른 사용 사례를 가지고 있습니다. 
TCP는 신뢰성 있는 통신을 보장하기 위해 사용되며, UDP는 속도와 간편함을 중시하는 애플리케이션에 사용됩니다. 
개발자는 자신의 프로젝트나 서비스의 요구 사항에 따라 TCP 또는 UDP 중 적합한 프로토콜을 선택합니다.

===========================================================================
 - Unicast, Broadcast, Multicast

Unicast (유니캐스트):
유니캐스트는 가장 일반적인 데이터 전송 방식으로, 
하나의 송신자가 하나의 수신자에게 데이터를 전송하는 방식입니다.
==송신자와 수신자 간에 직접적인 1:1 통신이 이루어집니다.==
데이터 전송 시, 목적지 주소에 수신자의 주소가 명시되어 있습니다.
예를 들어, 웹 브라우저가 서버에 HTTP 요청을 보내는 것은 유니캐스트의 예입니다.

Broadcast (브로드캐스트):
브로드캐스트는 네트워크 상의 모든 호스트에게 데이터를 전송하는 방식입니다.
송신자가 네트워크 주소로 목적지를 지정하여 데이터를 전송하면, 
해당 네트워크 상의 모든 호스트가 데이터를 수신합니다.
브로드캐스트는 네트워크 상의 모든 장치에게 특정 정보를 전달하거나 서비스를 발견하는 데 사용됩니다.
ARP(Address Resolution Protocol)나 DHCP(Dynamic Host Configuration Protocol) 등에서 브로드캐스트가 사용됩니다.

Multicast (멀티캐스트):
멀티캐스트는 그룹으로 묶여 있는 여러 대의 호스트에게 데이터를 전송하는 방식입니다.
송신자가 특정한 그룹에 속한 호스트들에게만 데이터를 전송합니다.
멀티캐스트 그룹에 가입한 호스트들만 데이터를 수신하며, 
그룹에 가입하지 않은 호스트는 데이터를 받지 않습니다.
IPTV(Internet Protocol Television), 온라인 비디오 스트리밍, 
멀티캐스트 DNS 등에서 멀티캐스트가 사용됩니다.

========================================================================

- 프로토콜 : 

HTTP(Hyper Text Transfer Protocol) : 크롬 엣지 폭스파이어 등 웹브라우저/응용계층은 정보를 요청하는, 
정보를 응답하는 응용프로그램이 반드시 필요하다. 
이를 각각 클라이언트(요청), 서버(응답)이라부른다.웹브라우저는대표적인웹클라이언트이다.
웹에서 데이터를 전송하기 위한 프로토콜로, 클라이언트와 서버 간의 데이터 전송을 담당합니다. 
주로 HTML 문서, 이미지, 비디오 등을 전송하는 데 사용됩니다.

FTP
파일을 전송하기 위한 프로토콜로, 클라이언트와 서버 간의 파일 전송을 지원합니다. 
파일의 업로드, 다운로드, 삭제, 이동 등의 작업을 수행할 수 있습니다.

DNS
도메인 이름과 IP 주소를 매핑하는 데 사용되는 프로토콜입니다. 
웹 브라우징이나 이메일 전송 시 도메인 이름을 IP 주소로 변환하는 데 사용됩니다.

DHCP
DHCP는 네트워크 장비에게 자동으로 IP 주소, 서브넷 마스크, 기본 게이트웨이, 
DNS 서버 등 네트워크 구성 정보를 제공하는 프로토콜입니다.
DHCP 서버는 클라이언트에게 IP 주소를 동적으로 할당하여 
네트워크 구성을 자동화하고 IP 주소 충돌을 방지합니다.
DHCP 클라이언트는 네트워크에 연결될 때 DHCP 서버에게 IP 주소를 요청하고, 
DHCP 서버는 사용 가능한 IP 주소 중에서 하나를 할당하여 응답합니다.

SMTP
SMTP는 전자 메일을 송수신하기 위해 사용되는 표준 프로토콜입니다.
이메일 클라이언트가 이메일 서버에게 이메일을 보내기 위해 SMTP를 사용합니다.
SMTP는 이메일 전송을 위한 규칙과 포맷을 정의하며, 
이메일을 송신하는 과정에서 메일 서버 간의 통신을 담당합니다.

POP/IMAP
POP와 IMAP는 이메일 클라이언트가 이메일 서버에서 이메일을 가져오는 데 사용되는 프로토콜입니다.
POP는 이메일을 사용자의 로컬 컴퓨터로 다운로드하여 서버에서 삭제하는 방식으로 동작합니다. 
따라서 이메일을 여러 장치에서 확인할 때 이메일이 동기화되지 않습니다.
반면에 IMAP는 이메일 서버에 저장된 이메일을 클라이언트로 전송하는 방식으로 동작합니다. 
따라서 이메일 서버에 저장된 이메일을 여러 장치에서 동일하게 볼 수 있습니다.

=======================================================

서버와 클라이언트 통신 구조

클라이언트(Client):

클라이언트는 사용자가 상호작용하는 디바이스나 응용 프로그램입니다. 
예를 들어, 웹 브라우저, 이메일 클라이언트, 모바일 앱 등이 클라이언트의 역할을 합니다.
클라이언트는 서버에게 데이터나 서비스를 요청하고, 서버의 응답을 기다립니다.
요청하는 데이터나 서비스에 따라 클라이언트는 다양한 프로토콜을 사용할 수 있습니다. 
예를 들어, 웹 브라우저는 HTTP 프로토콜을 사용하여 
웹 서버에 데이터를 요청하고, SMTP 및 POP/IMAP 프로토콜을 사용하여 이메일 서버와 통신합니다.

서버(Server):
서버는 클라이언트의 요청을 받아들이고 처리하는 컴퓨터 시스템 또는 프로그램입니다. 
예를 들어, 웹 서버, 이메일 서버, 데이터베이스 서버 등이 서버의 역할을 합니다.
서버는 클라이언트로부터 요청을 받으면 해당 요청에 대한 처리를 수행하고, 결과를 클라이언트에게 반환합니다.
서버는 여러 클라이언트의 요청을 처리하고 응답할 수 있어야 합니다. 
이러한 다중 클라이언트 지원은 대부분의 서버 응용 프로그램에서 필수적입니다.

통신 구조에서 클라이언트와 서버는 네트워크를 통해 데이터를 주고받습니다. 
일반적으로 클라이언트는 서버의 IP 주소와 포트 번호를 사용하여 서버에 연결하고 통신합니다. 
이러한 클라이언트-서버 모델은 네트워크 응용 프로그램 및 서비스를 구현하는 데 널리 사용되며, 
인터넷을 통한 대부분의 상호작용은 이러한 방식으로 이루어집니다.
 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
